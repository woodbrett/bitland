***NOTE THESE ARE WINDOWS-BIASED INSTRUCTIONS

1. install postgres and postgis and create a database called "bitland"
2. run the etl in "database_etl.sql" file
3. install the python modules in the pip file
4. store the database.ini file on your computer and modify the settings for your database
5. reference the path in the "system_variables.py" file
6. configure other system variables in the "system_variables.py" file
7. load initial peer(s) into networking.peer table


***EXAMPLE system_variables

global block_height_url 
global address_search_url
global max_peer_count
global peering_port
global peering_host
global database_settings_file_location
global local_api_username
global local_api_password
global peer_list
global transaction_validation_url
global rpc_user
global rpc_password 
global node_url
global run_node_var
global run_mining_var
global initial_synch_var


#external bitcoin information
block_height_url = 'https://blockstream.info/api/blocks/tip/height'
address_search_url = 'https://blockstream.info/api/address/:address/txs'
transaction_validation_url = 'https://blockstream.info/api/address/:address'

#other
max_peer_count = 5
peering_port = 8334
peering_host = "0.0.0.0"
database_settings_file_location = 'C:/other/database.ini'
mining_path = 'MULTILINESTRING ((-24.32582123586823 89.84080925775434, -74.62860694880915 82.52182923327297, -91.10241210722151 75.38399911209015, -95.0423241796008 66.86026257852093, -100.6851598368639 54.57263922226819),(-101.3573454825694 55.02763381008007, -82.54937943634791 31.48094731046708),(-99.09477782473776 54.17424604757469, -110.205550984981 30.49451859774517, -96.77412063206563 28.15864596136793))'
local_api_username = 'admin'
local_api_password = 'password'
peer_list = []

#local bitcoin node information rpc_user and rpc_password are set in the bitcoin.conf file
rpc_user = 'admin'
rpc_password = 'password'
node_url = '192.168.86.34:8332'

#running node
run_node_var = True
run_mining_var = True
initial_synch_var = False


***MORE DETAILED INSTRUCTIONS FOR NON TECHNICAL WINDOWS USERS
1. download postgres 13.4 from https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
    1.1 For Linux - $sudo apt install postgresql
2. when installing postgres, there is a step in the installer to add extensions, add POSTGIS extension here
3. if you miss the extension step during postgres installation you can just install it from here https://www.enterprisedb.com/downloads/postgis
    3.1 For Linux - PostgreSQL 13
        sudo su -c 'echo "deb [arch=amd64] https://apt.enterprisedb.com/$(lsb_release -cs)-edb/ $(lsb_release -cs) main" > /etc/apt/sources.list.d/edb-$(lsb_release -cs).list'
        # Replace '<USERNAME>' and '<PASSWORD>' below with your username and password for the EDB repositories. Visit https://www.enterprisedb.com/user to get your username and password
        sudo su -c 'echo "machine apt.enterprisedb.com login <USERNAME> password <PASSWORD>" > /etc/apt/auth.conf.d/edb.conf'
        # Add support for secure APT repositories
        sudo apt-get -y install apt-transport-https
        # Add the EDB signing key
        sudo wget -q -O - https://apt.enterprisedb.com/edb-deb.gpg.key  | sudo apt-key add -
        # Update the repository meta data
        sudo apt-get update
        # Install selected packages
        sudo apt-get -y install postgresql-13-postgis-3 
4. download dbeaver community edition to use postgres https://dbeaver.io/download/
5. create database called "bitland". the second way in this tutorial is pretty good. https://phoenixnap.com/kb/postgres-create-database. just use psql window and hit enter 4 times, type in your password (from when you installed postgres), then type "create database bitland;" and hit enter
6. connect your dbeaver to this database by hitting the "new database connection" button in upper left then choose the postgresql icon, then your parameters should be host = localhost, port = 5432, database = postgres, username and password should be the ones you created when you installed postgres 







